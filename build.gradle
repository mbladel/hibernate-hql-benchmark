buildscript {
    repositories {
        mavenCentral()
    }
}

task jmh {
    // NOTE this is not the jmh task from the jmh plugin.  It is merely a "grouping task"
    // for things to do when the benchmarks are run from the root - mainly creating a
    // unified report

    doLast {
        getLogger().lifecycle( "Generating shared JMH result report" )
//
//        def jsonSlurper = new JsonSlurper()
//
//        final Map<BenchmarkKey,BenchmarkScore> orm6Results = parseJson( project( ":orm6" ).jmhReportJsonFile as File )
//        final Map<BenchmarkKey,BenchmarkScore> orm5Results = parseJson( project( ":orm5" ).jmhReportJsonFile as File )

		// todo : generate the report :)
    }
}

// NOTE : the benchmark project also define a `benchmark` alias for the `jmh`
// task.  Allow that to be run from the root as well.
task benchmark( dependsOn: [tasks.jmh] )

wrapper {
    // To upgrade the version of gradle used in the wrapper, run:
    //     gradlew wrapper --gradle-version NEW_VERSION
}

//Map<BenchmarkKey, BenchmarkScore> parseJson(File jsonFile) {
//    def results = new HashMap<BenchmarkKey, BenchmarkScore>()
//    def jsonData = new JsonSlurper().parse( jsonFile );
//    jsonData.each {
//        benchmark -> results.put(
//                new BenchmarkKey( benchmark.mode, benchmark.benchmark ),
//                new BenchmarkScore( benchmark.primaryMetric.score, benchmark.primaryMetric.scoreError)
//        )
//    }
//}
//
//class BenchmarkKey {
//    String mode;
//    String name;
//
//    BenchmarkKey(String mode, String name) {
//        this.mode = mode
//        this.name = name
//    }
//
//    boolean equals(o) {
//        if ( this.is( o ) ) {
//            return true
//        }
//        if ( getClass() != o.class ) {
//            return false
//        }
//
//        BenchmarkKey that = (BenchmarkKey) o
//
//        if ( mode != that.mode ) {
//            return false
//        }
//        if ( name != that.name ) {
//            return false
//        }
//
//        return true
//    }
//
//    int hashCode() {
//        int result
//        result = mode.hashCode()
//        result = 31 * result + name.hashCode()
//        return result
//    }
//}
//
//class BenchmarkScore {
//    BigDecimal score;
//    BigDecimal confidence;
//
//    BenchmarkScore(BigDecimal score, BigDecimal confidence) {
//        this.score = score
//        this.confidence = confidence
//    }
//}